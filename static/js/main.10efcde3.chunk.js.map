{"version":3,"sources":["loading.js","MovieCard.js","SearchMovies.js","App.js","index.js"],"names":["LoadingIndicator","class","MovieCard","movie","useState","modalShow","setModalShow","movieDetails","setData","isLoading","setLoading","getMovieDetails","a","url","id","fetch","res","json","data","console","log","MyVerticallyCenteredModal","props","BuildView","Modal","Body","className","src","poster_path","alt","title","original_title","release_date","substring","genres","map","v","name","join","runtime","status","popularity","vote_average","vote_count","budget","revenue","overview","size","aria-labelledby","centered","Header","closeButton","onClick","show","onHide","SearchMovies","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","results","length","filter","value","onSubmit","type","placeholder","onChange","target","MyApp","style","textAlign","fontSize","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10efcde3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style/loading.css\";\r\n\r\nexport default function LoadingIndicator() {\r\n    return (\r\n        <center>\r\n            <div class=\"sk-chase\">\r\n                <div class=\"sk-chase-dot\"></div>\r\n                <div class=\"sk-chase-dot\"></div>\r\n                <div class=\"sk-chase-dot\"></div>\r\n                <div class=\"sk-chase-dot\"></div>\r\n                <div class=\"sk-chase-dot\"></div>\r\n                <div class=\"sk-chase-dot\"></div>\r\n            </div>\r\n        </center>\r\n    );\r\n}","import React, { useState } from \"react\";\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport LoadingIndicator from \"./loading\";\r\n\r\nexport default function MovieCard({ movie }) {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    const [movieDetails, setData] = useState();\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const getMovieDetails = async () => {\r\n        const url = `https://api.themoviedb.org/3/movie/${movie.id}?api_key=1a785e67408342d7cd21fe0f3db02ab2&language=en-US`;\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            setData(data);\r\n            console.log(data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    function MyVerticallyCenteredModal(props) {\r\n        function BuildView() {\r\n            if (isLoading || movieDetails == null) {\r\n                return <LoadingIndicator />\r\n            } else {\r\n                return (\r\n                    <Modal.Body className=\"row container\">\r\n\r\n                        <img className=\"col-lg mb-sm-5 mb-lg-0\"\r\n                            src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movieDetails.poster_path}`}\r\n                            alt={movie.title + ' poster'} />\r\n\r\n\r\n                        <div className=\"col-lg\">\r\n                            <h1>{`${movieDetails.original_title} (${movieDetails.release_date.substring(0,4)})`}</h1>\r\n\r\n                            <div className='text-muted description'>{`${movieDetails.genres.map((v)=>v.name).join(',')} - ${movieDetails.runtime} m`}</div>\r\n\r\n                            <br/>\r\n                            <h6>Status</h6>\r\n                            <div className=\"description\">{movieDetails.status}</div>\r\n                            \r\n                            <br/>\r\n                            <h6>Popularity</h6>\r\n                            <div className=\"description\">{movieDetails.popularity}</div>\r\n\r\n                            <br/>\r\n                            <h6>Original Title</h6>\r\n                            <div className=\"description\">{movieDetails.original_title}</div>\r\n                            \r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <h6>Score (vote)</h6>\r\n                                    <div className=\"description\">{`${movieDetails.vote_average} (${movieDetails.vote_count})`}</div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h6>Bugdet</h6>\r\n                                    <div className=\"description\">{`$${movieDetails.budget}`}</div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h6>Revenue</h6>\r\n                                    <div className=\"description\">{`$${movieDetails.revenue}`}</div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <br/>\r\n                            <h5>Overview</h5>\r\n                            <div className=\"description\">{movieDetails.overview}</div>\r\n\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n\r\n                <Modal.Header closeButton></Modal.Header>\r\n\r\n                <BuildView />\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card-item\" onClick={() => { setModalShow(true); getMovieDetails(); }}>\r\n                <img className=\"card-image\"\r\n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\r\n                    alt={movie.title + ' poster'} />\r\n                <div>\r\n                    <h1>{movie.title}</h1>\r\n                    <div className=\"description\">{movie.overview.substring(0, 150)}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)} />\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport LoadingIndicator from \"./loading\";\r\n\r\nexport default function SearchMovies() {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState();\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const searchMovies = async (e) => {\r\n        e.preventDefault();\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=1a785e67408342d7cd21fe0f3db02ab2&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\r\n        if (query === '') return;\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            setMovies(data.results);\r\n            console.log(data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    function BuildView() {\r\n        if (isLoading) {\r\n            return <LoadingIndicator />\r\n        } else {\r\n            if (movies != null) {\r\n                return (movies.length === 0 ? <center><p>No result</p></center> :\r\n                    <div className=\"card-list\">\r\n                        {movies.filter(value => value.poster_path).map(movie => <MovieCard movie={movie} key={movie.id} />)}\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <center>\r\n                <form className=\"form\" onSubmit={searchMovies}>\r\n                    <input className=\"input\" type=\"text\" name=\"query\" placeholder=\"Search...\" value={query} onChange={(e) => setQuery(e.target.value)}></input>\r\n                    <button className=\"button\" type=\"submit\">Search</button>\r\n                </form>\r\n            </center>\r\n            <BuildView />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './style/app.css';\r\nimport SearchMovies from \"./SearchMovies\";\r\n\r\nclass MyApp extends React.Component {  \r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n\r\n        <div className=\"content\">\r\n          <div className=\"title\">Rovie</div>\r\n          <p className=\"subtitle\">React Movie App</p>\r\n          <p style={{ textAlign: 'center', fontSize: '0.9rem' }}>API by: www.themoviedb.org</p>\r\n          <SearchMovies />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MyApp from \"./App\";\r\n\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './style/index.css';\r\n\r\nReactDOM.render(\r\n  <MyApp />, document.getElementById('root')\r\n);"],"sourceRoot":""}